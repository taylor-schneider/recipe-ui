/* Define the basic css for the containers */
html, body {
    display: unset;
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    margin: 0;
}
#root {
    position: relative;
    top: 0px;
    left: 0px;
    width: 100%;
    overflow: auto;
}


/* Define the names of the grid areas*/
.header {
    grid-area: header-area;
}
.layout-body {
    grid-area: content-area;
}
.navigation {
    grid-area: nav-area;
}
.footer {
    grid-area: footer-area;
}

/* Configure the wrapper as a grid */
.wrapper {
    display: grid;
    gap: 0vh;
    grid-template-areas:
        "header-area"
        "nav-area"
        "content-area"
        "footer-area";
}

/* Define gridlayout and style for Cellphones*/
@media screen and (max-width: 640px){
    .wrapper{
        grid-template-columns: 1fr;
        grid-template-areas:
            "header-area"
            "content-area"
            "footer-area"
    }
}


/* Define gridlayout and style for Tablets*/
@media screen and (min-width: 640px) and (max-width: 1024px) {
    .wrapper {
        grid-template-columns: 1fr 1fr;
        grid-template-areas:
        "header-area header-area"
        "content-area content-area"
        "footer-area footer-area"
    }
}

/* Define gridlayout and style for Desktops*/
@media screen and (min-width: 1024px){
    .wrapper {
        grid-template-columns: 1fr 2fr 2fr 2fr 2fr;
        grid-template-areas:
        "header  header  header  header"
        "nav     nav     nav     nav"
        "content content content content"
        "footer  footer  footer  footer";
    }
}

.layout-body {
    float: right;
    width: calc(100% - 1vw);
}